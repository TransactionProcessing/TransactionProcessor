// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TransactionProcessor.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "shared")]
    public partial class SaleTransactionFeature : object, Xunit.IClassFixture<SaleTransactionFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "base",
                "shared"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "SaleTransactionFeature.feature"
#line hidden
        
        public SaleTransactionFeature(SaleTransactionFeature.FixtureData fixtureData, TransactionProcessor_IntegrationTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "SaleTransaction", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DisplayName",
                        "Description"});
            table48.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST Scope",
                        "A scope for Estate Managememt REST"});
            table48.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST  Scope",
                        "A scope for Transaction Processor REST"});
            table48.AddRow(new string[] {
                        "voucherManagement",
                        "Voucher Management REST  Scope",
                        "A scope for Voucher Management REST"});
            table48.AddRow(new string[] {
                        "messagingService",
                        "Scope for Messaging REST",
                        "Scope for Messaging REST"});
#line 6
 testRunner.Given("I create the following api scopes", ((string)(null)), table48, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResourceName",
                        "DisplayName",
                        "Secret",
                        "Scopes",
                        "UserClaims"});
            table49.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST",
                        "Secret1",
                        "estateManagement",
                        "MerchantId, EstateId, role"});
            table49.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST",
                        "Secret1",
                        "transactionProcessor",
                        ""});
            table49.AddRow(new string[] {
                        "voucherManagement",
                        "Voucher Management REST",
                        "Secret1",
                        "voucherManagement",
                        ""});
            table49.AddRow(new string[] {
                        "messagingService",
                        "Messaging REST",
                        "Secret",
                        "messagingService",
                        ""});
#line 13
 testRunner.Given("the following api resources exist", ((string)(null)), table49, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId",
                        "ClientName",
                        "Secret",
                        "AllowedScopes",
                        "AllowedGrantTypes"});
            table50.AddRow(new string[] {
                        "serviceClient",
                        "Service Client",
                        "Secret1",
                        "estateManagement,transactionProcessor,voucherManagement,messagingService",
                        "client_credentials"});
#line 20
 testRunner.Given("the following clients exist", ((string)(null)), table50, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId"});
            table51.AddRow(new string[] {
                        "serviceClient"});
#line 24
 testRunner.Given("I have a token to access the estate management and transaction processor resource" +
                    "s", ((string)(null)), table51, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName"});
            table52.AddRow(new string[] {
                        "Test Estate 1"});
#line 28
 testRunner.Given("I have created the following estates", ((string)(null)), table52, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "RequireCustomMerchantNumber",
                        "RequireCustomTerminalNumber"});
            table53.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "True",
                        "True"});
            table53.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "True",
                        "True"});
            table53.AddRow(new string[] {
                        "Test Estate 1",
                        "PataPawa PostPay",
                        "True",
                        "True"});
#line 32
 testRunner.Given("I have created the following operators", ((string)(null)), table53, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription"});
            table54.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract"});
            table54.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Hospital 1 Contract"});
            table54.AddRow(new string[] {
                        "Test Estate 1",
                        "PataPawa PostPay",
                        "PataPawa PostPay Contract"});
#line 38
 testRunner.Given("I create a contract with the following values", ((string)(null)), table54, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "DisplayText",
                        "Value",
                        "ProductType"});
            table55.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Custom",
                        "",
                        "MobileTopup"});
            table55.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Hospital 1 Contract",
                        "10 KES",
                        "10 KES",
                        "",
                        "Voucher"});
            table55.AddRow(new string[] {
                        "Test Estate 1",
                        "PataPawa PostPay",
                        "PataPawa PostPay Contract",
                        "Post Pay Bill Pay",
                        "Bill Pay (Post)",
                        "",
                        "BillPayment"});
#line 44
 testRunner.When("I create the following Products", ((string)(null)), table55, "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "CalculationType",
                        "FeeDescription",
                        "Value"});
            table56.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Percentage",
                        "Merchant Commission",
                        "0.50"});
            table56.AddRow(new string[] {
                        "Test Estate 1",
                        "PataPawa PostPay",
                        "PataPawa PostPay Contract",
                        "Post Pay Bill Pay",
                        "Percentage",
                        "Merchant Commission",
                        "0.50"});
#line 50
 testRunner.When("I add the following Transaction Fees", ((string)(null)), table56, "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "MerchantName",
                        "AddressLine1",
                        "Town",
                        "Region",
                        "Country",
                        "ContactName",
                        "EmailAddress",
                        "EstateName"});
            table57.AddRow(new string[] {
                        "Test Merchant 1",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 1",
                        "testcontact1@merchant1.co.uk",
                        "Test Estate 1"});
            table57.AddRow(new string[] {
                        "Test Merchant 2",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 2",
                        "testcontact2@merchant2.co.uk",
                        "Test Estate 1"});
            table57.AddRow(new string[] {
                        "Test Merchant 3",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 3",
                        "testcontact3@merchant3.co.uk",
                        "Test Estate 1"});
            table57.AddRow(new string[] {
                        "Test Merchant 4",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 4",
                        "testcontact4@merchant4.co.uk",
                        "Test Estate 1"});
#line 55
 testRunner.Given("I create the following merchants", ((string)(null)), table57, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperatorName",
                        "MerchantName",
                        "MerchantNumber",
                        "TerminalNumber",
                        "EstateName"});
            table58.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "PataPawa PostPay",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 2",
                        "00000002",
                        "10000002",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 2",
                        "00000002",
                        "10000002",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "PataPawa PostPay",
                        "Test Merchant 2",
                        "00000002",
                        "10000002",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 3",
                        "00000003",
                        "10000003",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 3",
                        "00000003",
                        "10000003",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "PataPawa PostPay",
                        "Test Merchant 3",
                        "00000003",
                        "10000003",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 4",
                        "00000004",
                        "10000004",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 4",
                        "00000004",
                        "10000004",
                        "Test Estate 1"});
            table58.AddRow(new string[] {
                        "PataPawa PostPay",
                        "Test Merchant 4",
                        "00000004",
                        "10000004",
                        "Test Estate 1"});
#line 62
 testRunner.Given("I have assigned the following  operator to the merchants", ((string)(null)), table58, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeviceIdentifier",
                        "MerchantName",
                        "EstateName"});
            table59.AddRow(new string[] {
                        "123456780",
                        "Test Merchant 1",
                        "Test Estate 1"});
            table59.AddRow(new string[] {
                        "123456781",
                        "Test Merchant 2",
                        "Test Estate 1"});
            table59.AddRow(new string[] {
                        "123456782",
                        "Test Merchant 3",
                        "Test Estate 1"});
            table59.AddRow(new string[] {
                        "123456783",
                        "Test Merchant 4",
                        "Test Estate 1"});
#line 77
 testRunner.Given("I have assigned the following devices to the merchants", ((string)(null)), table59, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Amount",
                        "DateTime",
                        "MerchantName",
                        "EstateName"});
            table60.AddRow(new string[] {
                        "Deposit1",
                        "240.00",
                        "Today",
                        "Test Merchant 1",
                        "Test Estate 1"});
            table60.AddRow(new string[] {
                        "Deposit1",
                        "110.00",
                        "Today",
                        "Test Merchant 2",
                        "Test Estate 1"});
            table60.AddRow(new string[] {
                        "Deposit1",
                        "110.00",
                        "Today",
                        "Test Merchant 3",
                        "Test Estate 1"});
            table60.AddRow(new string[] {
                        "Deposit1",
                        "100.00",
                        "Today",
                        "Test Merchant 4",
                        "Test Estate 1"});
#line 84
 testRunner.Given("I make the following manual merchant deposits", ((string)(null)), table60, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "AccountNumber",
                        "AccountName",
                        "DueDate",
                        "Amount"});
            table61.AddRow(new string[] {
                        "12345678",
                        "Test Account 1",
                        "Today",
                        "100.00"});
#line 91
 testRunner.Given("the following bills are available at the PataPawa PostPaid Host", ((string)(null)), table61, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Sale Transactions")]
        [Xunit.TraitAttribute("FeatureTitle", "SaleTransaction")]
        [Xunit.TraitAttribute("Description", "Sale Transactions")]
        [Xunit.TraitAttribute("Category", "PRTest")]
        public void SaleTransactions()
        {
            string[] tagsOfScenario = new string[] {
                    "PRTest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sale Transactions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 96
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName",
                            "RecipientEmail",
                            "RecipientMobile",
                            "MessageType",
                            "AccountNumber",
                            "CustomerName"});
                table62.AddRow(new string[] {
                            "Today",
                            "1",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "110.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "2",
                            "Sale",
                            "1",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "3",
                            "Sale",
                            "2",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "4",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "90.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup",
                            "",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "5",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "",
                            "",
                            "Hospital 1 Contract",
                            "10 KES",
                            "test@recipient.co.uk",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "6",
                            "Sale",
                            "1",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "",
                            "",
                            "Hospital 1 Contract",
                            "10 KES",
                            "",
                            "123456789",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "7",
                            "Sale",
                            "2",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "",
                            "",
                            "Hospital 1 Contract",
                            "10 KES",
                            "test@recipient.co.uk",
                            "",
                            "",
                            "",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "8",
                            "Sale",
                            "2",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "PataPawa PostPay",
                            "0.00",
                            "",
                            "",
                            "PataPawa PostPay Contract",
                            "Post Pay Bill Pay",
                            "test@recipient.co.uk",
                            "",
                            "VerifyAccount",
                            "12345678",
                            ""});
                table62.AddRow(new string[] {
                            "Today",
                            "9",
                            "Sale",
                            "2",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "PataPawa PostPay",
                            "20.00",
                            "",
                            "",
                            "PataPawa PostPay Contract",
                            "Post Pay Bill Pay",
                            "test@recipient.co.uk",
                            "123456789",
                            "ProcessBill",
                            "12345678",
                            "Mr Test Customer"});
#line 98
 testRunner.When("I perform the following transactions", ((string)(null)), table62, "When ");
#line hidden
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "1",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "2",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 3",
                            "3",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "4",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "5",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "6",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 3",
                            "7",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8",
                            "0000",
                            "SUCCESS"});
                table63.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "9",
                            "0000",
                            "SUCCESS"});
#line 110
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table63, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber"});
                table64.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "1"});
#line 122
 testRunner.When("I request the receipt is resent", ((string)(null)), table64, "When ");
#line hidden
                TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table65.AddRow(new string[] {
                            "Today",
                            "10",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup"});
#line 126
 testRunner.When("I perform the following transactions", ((string)(null)), table65, "When ");
#line hidden
                TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table66.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "10",
                            "1000",
                            "Device Identifier 123456781 not valid for Merchant Test Merchant 1"});
#line 130
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table66, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table67.AddRow(new string[] {
                            "Today",
                            "11",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "InvalidEstate",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup"});
#line 134
 testRunner.When("I perform the following transactions", ((string)(null)), table67, "When ");
#line hidden
                TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table68.AddRow(new string[] {
                            "InvalidEstate",
                            "Test Merchant 1",
                            "11",
                            "1001",
                            "Estate Id [79902550-64df-4491-b0c1-4e78943928a3] is not a valid estate"});
#line 138
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table68, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table69.AddRow(new string[] {
                            "Today",
                            "12",
                            "Sale",
                            "1",
                            "InvalidMerchant",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup"});
#line 142
 testRunner.When("I perform the following transactions", ((string)(null)), table69, "When ");
#line hidden
                TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table70.AddRow(new string[] {
                            "Test Estate 1",
                            "InvalidMerchant",
                            "12",
                            "1002",
                            "Merchant Id [d59320fa-4c3e-4900-a999-483f6a10c69a] is not a valid merchant for es" +
                                "tate [Test Estate 1]"});
#line 146
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table70, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table71.AddRow(new string[] {
                            "Today",
                            "13",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "EmptyContract",
                            "Variable Topup"});
#line 150
 testRunner.When("I perform the following transactions", ((string)(null)), table71, "When ");
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table72.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "13",
                            "1012",
                            "Contract Id [00000000-0000-0000-0000-000000000000] must be set for a sale transac" +
                                "tion"});
#line 154
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table72, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table73.AddRow(new string[] {
                            "Today",
                            "14",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "InvalidContract",
                            "Variable Topup"});
#line 158
 testRunner.When("I perform the following transactions", ((string)(null)), table73, "When ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table74.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "14",
                            "1015",
                            "Contract Id [934d8164-f36a-448e-b27b-4d671d41d180] not valid for Merchant [Test M" +
                                "erchant 1]"});
#line 162
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table74, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table75.AddRow(new string[] {
                            "Today",
                            "15",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "EmptyProduct"});
#line 166
 testRunner.When("I perform the following transactions", ((string)(null)), table75, "When ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table76.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "15",
                            "1013",
                            "Product Id [00000000-0000-0000-0000-000000000000] must be set for a sale transact" +
                                "ion"});
#line 170
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table76, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table77.AddRow(new string[] {
                            "Today",
                            "16",
                            "Sale",
                            "1",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "InvalidProduct"});
#line 174
 testRunner.When("I perform the following transactions", ((string)(null)), table77, "When ");
#line hidden
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table78.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "16",
                            "1016",
                            "Product Id [934d8164-f36a-448e-b27b-4d671d41d180] not valid for Merchant [Test Me" +
                                "rchant 1]"});
#line 178
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table78, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "TransactionSource",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table79.AddRow(new string[] {
                            "Today",
                            "17",
                            "Sale",
                            "1",
                            "Test Merchant 4",
                            "123456783",
                            "Test Estate 1",
                            "Safaricom",
                            "300.00",
                            "123456789",
                            "testcustomer@customer.co.uk",
                            "Safaricom Contract",
                            "Variable Topup"});
#line 182
 testRunner.When("I perform the following transactions", ((string)(null)), table79, "When ");
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table80.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 4",
                            "17",
                            "1009",
                            "Merchant [Test Merchant 4] does not have enough credit available [100.00] to perf" +
                                "orm transaction amount [300.00]"});
#line 186
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table80, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "Reference",
                            "EntryType",
                            "In",
                            "Out",
                            "ChangeAmount",
                            "Balance"});
                table81.AddRow(new string[] {
                            "Today",
                            "Merchant Deposit",
                            "C",
                            "240.00",
                            "0.00",
                            "240.00",
                            "230.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "110.00",
                            "110.00",
                            "130.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "90.00",
                            "90.00",
                            "30.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "10.00",
                            "10.00",
                            "20.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "20.00",
                            "20.00",
                            "20.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Fee Processed",
                            "C",
                            "0.00",
                            "0.55",
                            "0.55",
                            "20.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Fee Processed",
                            "C",
                            "0.00",
                            "0.45",
                            "0.45",
                            "20.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Transaction Fee Processed",
                            "C",
                            "0.00",
                            "0.01",
                            "0.10",
                            "20.00"});
                table81.AddRow(new string[] {
                            "Today",
                            "Opening Balance",
                            "C",
                            "0.00",
                            "0.00",
                            "0.00",
                            "20.00"});
#line 190
 testRunner.Then("the following entries appear in the merchants balance history for estate \'Test Es" +
                        "tate 1\' and merchant \'Test Merchant 1\'", ((string)(null)), table81, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "Reference",
                            "EntryType",
                            "In",
                            "Out",
                            "ChangeAmount",
                            "Balance"});
                table82.AddRow(new string[] {
                            "Today",
                            "Merchant Deposit",
                            "C",
                            "110.00",
                            "0.00",
                            "110.00",
                            "230.00"});
                table82.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "100.00",
                            "100.00",
                            "130.00"});
                table82.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "10.00",
                            "10.00",
                            "30.00"});
                table82.AddRow(new string[] {
                            "Today",
                            "Transaction Fee Processed",
                            "C",
                            "0.00",
                            "0.50",
                            "0.50",
                            "20.00"});
                table82.AddRow(new string[] {
                            "Today",
                            "Opening Balance",
                            "C",
                            "0.00",
                            "0.00",
                            "0.00",
                            "20.00"});
#line 202
 testRunner.Then("the following entries appear in the merchants balance history for estate \'Test Es" +
                        "tate 1\' and merchant \'Test Merchant 2\'", ((string)(null)), table82, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "Reference",
                            "EntryType",
                            "In",
                            "Out",
                            "ChangeAmount",
                            "Balance"});
                table83.AddRow(new string[] {
                            "Today",
                            "Merchant Deposit",
                            "C",
                            "110.00",
                            "0.00",
                            "110.00",
                            "230.00"});
                table83.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "100.00",
                            "100.00",
                            "130.00"});
                table83.AddRow(new string[] {
                            "Today",
                            "Transaction Completed",
                            "D",
                            "0.00",
                            "10.00",
                            "10.00",
                            "30.00"});
                table83.AddRow(new string[] {
                            "Today",
                            "Transaction Fee Processed",
                            "C",
                            "0.00",
                            "0.85",
                            "0.50",
                            "20.00"});
                table83.AddRow(new string[] {
                            "Today",
                            "Opening Balance",
                            "C",
                            "0.00",
                            "0.00",
                            "0.00",
                            "20.00"});
#line 210
 testRunner.Then("the following entries appear in the merchants balance history for estate \'Test Es" +
                        "tate 1\' and merchant \'Test Merchant 3\'", ((string)(null)), table83, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                SaleTransactionFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                SaleTransactionFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
